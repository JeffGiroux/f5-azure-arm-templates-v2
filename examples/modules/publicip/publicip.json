{
	"$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
	"contentVersion": "1.2.0.0",
	"parameters": {
		"dnsLabel": {
			"defaultValue": "appDns",
			"metadata": {
				"description": "Unique DNS name for the public IP address used to access the virtual machine."
			},
			"type": "string"
		},
		"numberPublicAppIPAddresses": {
			"defaultValue": 1,
			"metadata": {
				"description": "Enter the number of public ip address to create for the application."
			},
			"type": "int"
		},
		"numberPublicMgmtIPAddresses": {
			"defaultValue": 0,
			"metadata": {
				"description": "Enter the number of public mgmt ip addresses to create."
			},
			"type": "int"
		},
		"tagValues": {
			"defaultValue": {
				"application": "APP",
				"cost": "COST",
				"environment": "ENV",
				"group": "GROUP",
				"owner": "OWNER"
			},
			"metadata": {
				"description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
			},
			"type": "object"
		}
	},
	"variables": {
		"copy": [
			{
				"count": "[parameters('numberPublicAppIPAddresses')]",
				"input": {
					"name": "[concat('FrontEnd', copyIndex('constructFrontEndIPConfigID'))]",
					"properties": {
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('dnsLabel'), '-app-pip', copyIndex('constructFrontEndIPConfigID')))]"
						}
					}
				},
				"name": "constructFrontEndIPConfigID"
			}
		],
		"dnsLabel": "[toLower(parameters('dnsLabel'))]",
		"networkApiVersion": "2019-04-01"
	},
	"resources": [
		{
			"apiVersion": "[variables('networkApiVersion')]",
			"condition": "[greater(parameters('numberPublicMgmtIPAddresses'), 0)]",
			"copy": {
				"count": "[parameters('numberPublicMgmtIPAddresses')]",
				"name": "mgmtpipcopy"
			},
			"location": "[resourceGroup().location]",
			"name": "[concat(variables('dnsLabel'), '-mgmt-pip', copyIndex())]",
			"properties": {
				"dnsSettings": {
					"domainNameLabel": "[concat(variables('dnsLabel'), '-mgmt', copyIndex(0))]"
				},
				"idleTimeoutInMinutes": 30,
				"publicIPAllocationMethod": "Static"
			},
			"sku": {
				"name": "Standard"
			},
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"type": "Microsoft.Network/publicIPAddresses"
		},
		{
			"apiVersion": "[variables('networkApiVersion')]",
			"condition": "[greater(parameters('numberPublicAppIPAddresses'), 0)]",
			"copy": {
				"count": "[parameters('numberPublicAppIPAddresses')]",
				"name": "apppipcopy"
			},
			"location": "[resourceGroup().location]",
			"name": "[concat(variables('dnsLabel'), '-app-pip', copyIndex())]",
			"properties": {
				"dnsSettings": {
					"domainNameLabel": "[concat(variables('dnsLabel'), '-app', copyIndex(0))]"
				},
				"idleTimeoutInMinutes": 30,
				"publicIPAllocationMethod": "Static"
			},
			"sku": {
				"name": "Standard"
			},
			"tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
			"type": "Microsoft.Network/publicIPAddresses"
		}
	],
	"outputs": {
		"appIpIds": {
			"condition": "[greater(parameters('numberPublicAppIPAddresses'), 0)]",
			"copy": {
				"count": "[parameters('numberPublicAppIPAddresses')]",
				"input": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('dnsLabel'), '-app-pip', copyIndex()))]"
			},
			"type": "array"
		},
		"appIps": {
			"condition": "[greater(parameters('numberPublicAppIPAddresses'), 0)]",
			"copy": {
				"count": "[parameters('numberPublicAppIPAddresses')]",
				"input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('dnsLabel'), '-app-pip', copyIndex()))).ipAddress]"
			},
			"type": "array"
		},
		"mgmtIpIds": {
			"condition": "[greater(parameters('numberPublicMgmtIPAddresses'), 0)]",
			"copy": {
				"count": "[parameters('numberPublicMgmtIPAddresses')]",
				"input": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('dnsLabel'), '-mgmt-pip', copyIndex()))]"
			},
			"type": "array"
		},
		"mgmtIps": {
			"condition": "[greater(parameters('numberPublicMgmtIPAddresses'), 0)]",
			"copy": {
				"count": "[parameters('numberPublicMgmtIPAddresses')]",
				"input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('dnsLabel'), '-mgmt-pip', copyIndex()))).ipAddress]"
			},
			"type": "array"
		}
	}
}